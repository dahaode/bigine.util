{"version":3,"sources":["IArrayIterator.ts","IHashTable.ts","IObjectIterator.ts","_iterator.ts","Q.ts","ENV.ts","ISuccessCallback.ts","IFailureCallback.ts","Remote.ts","@module.ts"],"names":["Util","Util.each","Util.every","Util.some","Util.indexOf","Util.clone","Util.Q","Util.Q.every","Util.Remote","Util.Remote.format","Util.Remote.get","Util.Remote.post","Util.Remote.Method","Util.Remote.http"],"mappings":"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","file":"bigine.util.js","sourcesContent":["/**\n * 声明数组遍历函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      IArrayIterator.ts\n */\n\nnamespace Util {\n    export interface IArrayIterator<T, U> {\n        (element: T, index?: number, array?: T[]): U;\n    }\n}\n","/**\n * 声明哈希表接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      IHashTable.ts\n */\n\nnamespace Util {\n    export interface IHashTable<T> {\n        [index: string]: T;\n    }\n}\n","/**\n * 声明对象遍历函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      IObjectIterator.ts\n */\n\n/// <reference path=\"IHashTable.ts\" />\n\nnamespace Util {\n    export interface IObjectIterator<T, U> {\n        (element: T, index?: string, object?: IHashTable<T>): U;\n    }\n}\n","/**\n * 定义数组类工具方法。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      _iterator.ts\n */\n\n/// <reference path=\"IArrayIterator.ts\" />\n/// <reference path=\"IObjectIterator.ts\" />\n\nnamespace Util {\n    /**\n     * 无条件遍历整个数组或对象。\n     */\n    export function each<T>(array: T[], iterator: IArrayIterator<T, any>, thisArg?: any): void;\n    export function each<T>(object: IHashTable<T>, iterator: IObjectIterator<T, any>, thisArg?: any): void;\n    export function each<T>(obj: any, cb: any, $this: any): void {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.forEach)\n                return obj.forEach(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                cb.call($this, obj[ii], ii, obj);\n            return;\n        }\n        for (ii in obj)\n            if (obj.hasOwnProperty(ii))\n                cb.call($this, obj[ii], ii, obj);\n    }\n\n    /**\n     * 遍历数组或对象至第一次失败。\n     */\n    export function every<T>(array: T[], iterator: IArrayIterator<T, boolean>, thisArg?: any): boolean;\n    export function every<T>(object: IHashTable<T>, iterator: IObjectIterator<T, boolean>, thisArg?: any): boolean;\n    export function every<T>(obj: any, cb: any, $this: any): boolean {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.every)\n                return obj.every(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (!cb.call($this, obj[ii], ii, obj))\n                    return false;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && !cb.call($this, obj[ii], ii, obj))\n                    return false;\n        return true;\n    }\n\n    /**\n     * 遍历数组或对象至第一次成功。\n     */\n    export function some<T>(array: T[], iterator: IArrayIterator<T, boolean>, thisArg?: any): boolean;\n    export function some<T>(object: IHashTable<T>, iterator: IObjectIterator<T, boolean>, thisArg?: any): boolean;\n    export function some<T>(obj: any, cb: any, $this: any): boolean {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.some)\n                return obj.some(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (cb.call($this, obj[ii], ii, obj))\n                    return true;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && cb.call($this, obj[ii], ii, obj))\n                    return true;\n        return false;\n    }\n\n    /**\n     * 定位子元素。\n     */\n    export function indexOf<T>(array: T[], element: T, offset?: number): number;\n    export function indexOf<T>(object: IHashTable<T>, element: T): string | number;\n    export function indexOf<T>(obj: any, item: T, offset: number = 0): any {\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.indexOf)\n                return obj.indexOf(item, offset);\n            for (ii = offset; ii < obj.length; ii++)\n                if (obj[ii] == item)\n                    return ii;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && obj[ii] == item)\n                    return ii;\n        return -1;\n    }\n\n    /**\n     * 克隆。\n     */\n    export function clone<T>(orig: T[]): T[];\n    export function clone<T>(orig: T): T;\n    export function clone(orig: any): any {\n        if ('object' != typeof orig)\n            return orig;\n        if (orig instanceof Array)\n            return (<any[]> orig).slice(0);\n        var dolly: IHashTable<any> = {};\n        Util.each(orig, (value: any, key: string) => {\n            dolly[key] = clone(value);\n        });\n        return dolly;\n    }\n}\n","/**\n * 定义基于 Promise 的序列调度组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Q.ts\n */\n\n/// <reference path=\"../include/tsd.d.ts\" />\n/// <reference path=\"_iterator.ts\" />\n\nnamespace Util {\n    if ('undefined' == typeof Promise)\n        require('es6-promise').polyfill();\n\n    export namespace Q {\n        /**\n         * 顺序遍历数组。\n         */\n        export function every<T, U>(array: T[], iterator: Util.IArrayIterator<T, U | Thenable<U>>, $this?: any): Promise<U> {\n            $this = $this || array;\n            var q: Promise<U>;\n            each(array, (element: T, index: number) => {\n                q = index ?\n                    q.then<U>(() => iterator.call($this, element, index, array)) :\n                    new Promise<U>((resolve: (value?: U | Thenable<U>) => void) => {\n                        resolve(iterator.call($this, element, index, array));\n                    });\n            });\n            return q;\n        }\n    }\n}\n","/**\n * 定义环境信息探测组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Env.ts\n */\n\n/// <reference path=\"../include/tsd.d.ts\" />\n\nnamespace Util {\n    export interface IEnvType {\n        Window: boolean;\n        Node: {\n            JS: boolean,\n            Webkit: boolean\n        };\n        Screen: {\n            Width: number,\n            Height: number\n        };\n        Protocol: string;\n        Canvas: boolean;\n        Mobile: boolean;\n        MSIE: boolean;\n    }\n\n    export var ENV: IEnvType = {\n        /**\n         * 是否存在 Window 对象。\n         */\n        Window: 'undefined' !== typeof window,\n        /**\n         * 是否为 NodeJS 环境。\n         */\n        Node: {\n            JS: !!('undefined' !== typeof process && process.version && process.arch),\n            Webkit: false\n        },\n        /**\n         * 屏幕信息。\n         */\n        Screen: {\n            Width: 1920,\n            Height: 1080\n        },\n        /**\n         * 通信协议。\n         */\n        Protocol: 'http:',\n        /**\n         * 是否支持 Canvas 功能。\n         */\n        Canvas: false,\n        /**\n         * 是否为移动设备。\n         */\n        Mobile: false,\n        /**\n         * IE 浏览器。\n         */\n        MSIE: false\n    };\n    ((env: IEnvType) => {\n        if (env.Node.JS)\n            env.Node.Webkit = !!(('node-webkit' in process.versions) || ('atom-shell' in process.versions) || ('electron' in process.versions));\n        var detect: () => [boolean, boolean] = () => {\n            var ua: string = navigator.userAgent.toLowerCase(),\n                pick: (pattern: RegExp) => string = (pattern: RegExp) => {\n                    var match: string[] = ua.match(pattern);\n                    return (match && 1 < match.length) ? match[1] : '';\n                },\n                ios: string = pick(/(ipod|iphone|ipad)/),\n                android: boolean = /android/.test(ua) && !/like android/.test(ua),\n                tablet: boolean = /tablet/.test(ua),\n                mobile: boolean = !tablet && /[^-]mobi/.test(ua),\n                osver: number = 0,\n                msie: boolean = false;\n            if (android)\n                osver = parseInt(pick(/android[ \\/-](\\d+(\\.\\d+)*)/), 10);\n            if ('ipad' == ios || (android && (3 == osver || (4 == osver && !mobile))) || /silk/.test(ua)) {\n                tablet = true;\n            } else if ('ipod' == ios || 'iphone' == ios || android || /blackberry|\\bbb\\d+/.test(ua) || /rim\\stablet/.test(ua) || /(web|hpw)os/.test(ua) || /bada/i.test(ua))\n                mobile = true;\n            if (/windows phone/.test(ua)) {\n                if (!/edge\\/(\\d+(\\.\\d+)?)/.test(ua))\n                    msie = true;\n            } else if (/msie|trident/.test(ua))\n                msie = true;\n            return [tablet || mobile, msie];\n        };\n        if (env.Window) {\n            if ('https:' == location.protocol)\n                env.Protocol = 'https:';\n            env.Canvas = 'CanvasRenderingContext2D' in window;\n            var desult: [boolean, boolean] = detect(),\n                doc: HTMLElement = document.documentElement;\n            env.Mobile = desult[0];\n            env.MSIE = desult[1];\n            // window.devicePixelRatio @?x\n            env.Screen.Width = desult[0] ? doc.clientWidth : screen.width;\n            env.Screen.Height = desult[0] ? doc.clientHeight : screen.height;\n        }\n    })(ENV);\n}\n","/**\n * 声明成功回调函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      ISuccessCallback.ts\n */\n\n/// <reference path=\"IHashTable.ts\" />\n\nnamespace Util {\n    export interface ISuccessCallback<T> {\n        (data: IHashTable<T>): void;\n    }\n}\n","/**\n * 声明失败回调函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      IFailureCallback.ts\n */\n\nnamespace Util {\n    export interface IFailureCallback {\n        (error: Error, status?: number): void;\n    }\n}\n","/**\n * 定义远端通信组件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Remote.ts\n */\n\n/// <reference path=\"../include/XDomainRequest.d.ts\" />\n/// <reference path=\"ENV.ts\" />\n/// <reference path=\"ISuccessCallback.ts\" />\n/// <reference path=\"IFailureCallback.ts\" />\n/// <reference path=\"_iterator.ts\" />\n\nnamespace Util {\n    var xdrs: any[] = [];\n\n    export namespace Remote {\n        /**\n         * 格式化。\n         */\n        export function format(url: string): string {\n            return ENV.Protocol + url.replace(/^.+\\/\\//, '//').replace(/\\?.*$/, '');\n        }\n\n        /**\n         * HTTP GET 远端数据。\n         */\n        export function get<T>(url: string, onSuccess: ISuccessCallback<T>, onFailure: IFailureCallback): void {\n            http<T>(Method.GET, url, {}, onSuccess, onFailure);\n        }\n\n        /**\n         * HTTP POST 远端数据。\n         */\n        export function post<T>(url: string, data: IHashTable<number | string>, onSuccess: ISuccessCallback<T>, onFailure: IFailureCallback): void {\n            http<T>(Method.POST, url, data, onSuccess, onFailure);\n        }\n\n        /**\n         * HTTP 请求方法。\n         */\n        export enum Method {\n            GET,\n            POST\n        };\n\n        /**\n         * HTTP 请求远端数据。\n         */\n        export function http<T>(method: Method, url: string, data: IHashTable<number | string>, onSuccess: ISuccessCallback<T>, onFailure: IFailureCallback): void {\n            var qs: string[] = [],\n                xhr: XMLHttpRequest;\n            if (ENV.Node.JS) {\n                xhr = require('./xhr').create();\n            } else if ('undefined' != typeof XDomainRequest) {\n                xhr = new XDomainRequest();\n                xdrs.push(xhr);\n            } else\n                xhr = new XMLHttpRequest();\n            xhr.onload = () => {\n                try {\n                    var resp: Util.IHashTable<any> = <Util.IHashTable<any>> JSON.parse(xhr.responseText);\n                    if ('reason' in resp)\n                        throw new Error(<string> resp['reason']);\n                    if ('status' in xhr && 200 != xhr.status)\n                        throw new Error(xhr.statusText);\n                    onSuccess(resp);\n                } catch (error) {\n                    onFailure(<Error> error, xhr.status);\n                }\n            };\n            xhr.onprogress = () => {\n                //\n            };\n            xhr.onerror = (event: ErrorEvent) => {\n                onFailure(<Error> event.error);\n            };\n            xhr.ontimeout = () => {\n                onFailure(new Error('Timeout'));\n            };\n            xhr.open(Method.GET == method ? 'GET' : 'POST', format(url), true);\n            each(data, (value: string | number, key: string) => {\n                qs.push(key + '=' + encodeURIComponent(<string> value));\n            });\n            if (qs.length && 'setRequestHeader' in xhr)\n                xhr['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded');\n            xhr.send(qs.length ? qs.join('&') : null);\n        }\n    }\n}\n","/**\n * 定义包主程序文件。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      @module.ts\n */\n\n/// <reference path=\"Q.ts\" />\n/// <reference path=\"Remote.ts\" />\n\nnamespace Util {\n    export var version: string = '${BIGINE_UTIL_VERSION}';\n}\n"],"sourceRoot":"/source/"}